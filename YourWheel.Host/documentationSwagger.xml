<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YourWheel.Host</name>
    </assembly>
    <members>
        <member name="T:YourWheel.Host.AuthorizationPolitics.IsAdminRequirement">
            <summary>
            Требование для авторизации с проверкой на роль Admin
            </summary>
        </member>
        <member name="T:YourWheel.Host.AuthorizationPolitics.IsAdminRequirementHandler">
            <summary>
              Обработчик требования для авторизации с проверкой на роль Admin
            </summary>
        </member>
        <member name="T:YourWheel.Host.AuthorizationPolitics.IsAuthenticationEnabledRequirement">
            <summary>
              Требование для авторизации с проверкой на включенную аутентификацию
            </summary>
        </member>
        <member name="T:YourWheel.Host.AuthorizationPolitics.IsAuthenticationEnabledRequirementHandler">
            <summary>
              Обработчик требования для авторизации с проверкой на включенную аутентификацию
            </summary>
        </member>
        <member name="T:YourWheel.Host.ConfigurationHelper">
            <summary>
            Конфигурация (на уровне сервиса)
            </summary>
        </member>
        <member name="T:YourWheel.Host.Constants">
            <summary>
            Константы
            </summary>
        </member>
        <member name="F:YourWheel.Host.Constants.UserIdClaimType">
            <summary>
            Тип утверждения для Claim
            </summary>
        </member>
        <member name="T:YourWheel.Host.Controllers.AccountController">
            <summary>
            Контроллер для информации об аккаунте пользователя
            </summary>
        </member>
        <member name="T:YourWheel.Host.Controllers.AdminController">
            <summary>
            Конроллер для работы администратора
            </summary>
        </member>
        <member name="M:YourWheel.Host.Controllers.AdminController.GetCountUsersAsync">
            <summary>
            Временный метод действия
            </summary>
            <returns></returns>
        </member>
        <member name="T:YourWheel.Host.Controllers.AuthController">
            <summary>
            Контроллер для аутентификации пользователя
            </summary>
        </member>
        <member name="M:YourWheel.Host.Controllers.AuthController.Logout">
            <summary>
              Выход
            </summary>
        </member>
        <member name="M:YourWheel.Host.Controllers.RegistrationController.RegistrationByLoginAsync(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Регистрация через логин и пароль
            </summary>
            <param name="userDto">Информация о пользователе</param>
        </member>
        <member name="M:YourWheel.Host.Controllers.RegistrationController.RigistrationByPhoneAsync(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Регистрация через телефон
            </summary>
            <param name="userDto">Информация о пользователе</param>
        </member>
        <member name="M:YourWheel.Host.Controllers.RegistrationController.RigistrationByEmailAsync(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Регистрация через почту
            </summary>
            <param name="userDto">Информация о пользователе</param>
        </member>
        <member name="T:YourWheel.Host.Extensions.ExceptionMiddlewareExtension">
            <summary>
            Расширение для ExceptionMiddleware.
            </summary>
        </member>
        <member name="T:YourWheel.Host.Extensions.HandleJwtInHeaderMiddlewareExtension">
            <summary>
              Расширение для HandleJwtInHeaderMiddleware.
            </summary>
        </member>
        <member name="T:YourWheel.Host.Extensions.HttpContextExtension">
            <summary>
              Расширения для HttpContext
            </summary>
        </member>
        <member name="F:YourWheel.Host.Extensions.HttpContextExtension.YOURWHEEL_CULTURE">
            <summary>
            Выбранный пользоввателем язык
            </summary>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.AddSecurityHeaders(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
              Добавление заголовков для безопасного обмена jwt в куках
            </summary>
            <param name="context">HttpContext</param>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.AddToken(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
              Добавление строки с токеном в куки
            </summary>
            <param name="context">HttpContext</param>
            <param name="tokenString">Строка с токеном</param>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.DeleteToken(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
              Удаление jwt из кук
            </summary>
            <param name="context">HttpContext</param>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.ReadToken(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
              Чтение jwt из кук
            </summary>
            <param name="context">HttpContext</param>
            <returns>Строка с токеном</returns>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.AddCookieKey(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String)">
            <summary>
            Добавление значения по ключу в куки
            </summary>
            <param name="context">HttpContext</param>
            <param name="key">Ключ</param>
            <param name="value">Значение</param>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.DeleteCookieByKey(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
              Удаление по ключу из cookies
            </summary>
            <param name="context">HttpContext</param>
            <param name="key">Удаляемый ключ</param>
        </member>
        <member name="M:YourWheel.Host.Extensions.HttpContextExtension.ReadCookieByKey(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
              Чтение по ключу из cookies
            </summary>
            <param name="context">HttpContext</param>
            <param name="key">Запрашиваемый ключ</param>
            <returns>Строка со значением по ключу</returns>
        </member>
        <member name="T:YourWheel.Host.Middlewares.ExceptionMiddleware">
            <summary>
            Middleware для логирования и обработки ошибок.
            </summary>
        </member>
        <member name="T:YourWheel.Host.Middlewares.HandleJwtInHeaderMiddleware">
            <summary>
              Middleware для переноса Jwt из кук в header запроса
            </summary>
        </member>
        <member name="T:YourWheel.Host.Services.IAuthenticationService">
            <summary>
              Сервис для аутентификации пользователей
            </summary>
        </member>
        <member name="M:YourWheel.Host.Services.IAuthenticationService.GetIdentityAsync(System.String,System.String)">
            <summary>
              Получение ClaimsIdentity пользователя с верификацией пароля
            </summary>
            <param name="username">Имя пользователя</param>
            <param name="password">Пароль</param>
            <returns>ClaimsIdentity пользователя</returns>
        </member>
        <member name="M:YourWheel.Host.Services.IAuthenticationService.GetIdentityAsync(System.Guid)">
            <summary>
              Получение ClaimsIdentity пользователя без верификации пароля
            </summary>
            <param name="userId">Id пользователя</param>
            <returns>ClaimsIdentity пользователя</returns>
        </member>
        <member name="T:YourWheel.Host.Services.IAuthenticationSettings">
            <summary>
              Интерфейс для настроек аутентификации
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IAuthenticationSettings.IsAuthenticationEnabled">
            <summary>
              Проверка на включенную аутентификацию
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IAuthenticationSettings.JwtAudience">
            <summary>
              Строка с Audience для jwt
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IAuthenticationSettings.JwtIssuer">
            <summary>
              Строка с Issuer для jwt
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IAuthenticationSettings.JwtLifeTime">
            <summary>
              LifeTime для jwt
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IAuthenticationSettings.JwtSymmetricSecurityKey">
            <summary>
              SymmetricSecurityKey для jwt
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IAuthenticationSettings.JwtValidationParameters">
            <summary>
              TokenValidationParameters для jwt
            </summary>
        </member>
        <member name="T:YourWheel.Host.Services.IJwtService">
            <summary>
            Сервис для работы с JWT
            </summary>
        </member>
        <member name="M:YourWheel.Host.Services.IJwtService.GenerateToken(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
              Генерация JwtSecurityToken
            </summary>
            <param name="claims">Claims для токена</param>
            <returns>JwtSecurityToken с заданными Claims</returns>
        </member>
        <member name="M:YourWheel.Host.Services.IJwtService.GetTokenExpiryDateTime(System.String)">
            <summary>
              Получение срока годности токена
            </summary>
            <param name="tokenString">Строка с токеном</param>
            <returns>DateTime срока годности</returns>
        </member>
        <member name="M:YourWheel.Host.Services.IJwtService.GetTokenString(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)">
            <summary>
              Сериализация jwt в строку
            </summary>
            <param name="token">JwtSecurityToken</param>
            <returns>Строка с токеном</returns>
        </member>
        <member name="M:YourWheel.Host.Services.IJwtService.GetUserId(System.String)">
            <summary>
              Получение Id пользователя из токена
            </summary>
            <param name="tokenString">Строка с токеном</param>
            <returns>Id пользователя</returns>
        </member>
        <member name="M:YourWheel.Host.Services.IJwtService.IsTokenStringValid(System.String)">
            <summary>
              Валидация строки с токеном
            </summary>
            <param name="tokenString">Строка с токеном</param>
            <returns>Валидный ли токен</returns>
        </member>
        <member name="T:YourWheel.Host.Services.IObjectTitlesService">
            <summary>
            Интерфейс локализаций
            </summary>
        </member>
        <member name="P:YourWheel.Host.Services.IObjectTitlesService.Titles">
            <summary>
            Список локализаций
            </summary>
        </member>
        <member name="M:YourWheel.Host.Services.IObjectTitlesService.Initialize">
            <summary>
            Инициализация локализаций
            </summary>
        </member>
        <member name="M:YourWheel.Host.Services.IObjectTitlesService.Add(System.String,System.String,System.String)">
            <summary>
            Добавление локализации
            </summary>
            <param name="tag"></param>
            <param name="rus"></param>
            <param name="eng"></param>
        </member>
        <member name="M:YourWheel.Host.Services.IObjectTitlesService.GetTitleByTag(System.String,System.Guid,System.Boolean)">
            <summary>
            Получить значение объекта с учетом локализации
            </summary>
            <param name="tag">Тег локализации</param>
            <param name="languageGuid">Id языка</param>
            <param name="isRecursion">Рекурсивный вход</param>
            <returns></returns>
        </member>
        <member name="T:YourWheel.Host.Services.Registration.IHelperRegistrationService">
            <summary>
            Hepler для сервиса регистрации
            </summary>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IHelperRegistrationService.IsRegistrationAllowed(System.String)">
            <summary>
            Разрешена ли регистрация (не происходит ли одновременно регистарция двух одинаковых пользователей)
            </summary>
            <param name="keyValue">Активные регистируемые "значения" - это может быть как login/телефон/email</param>
            <returns>Разрешена ли регистрация</returns>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IHelperRegistrationService.RemoveRegistrationAttempt(System.String)">
            <summary>
            Удаление активной регистрации
            </summary>
            <param name="keyValue">Активные регистируемые "значения"</param>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IHelperRegistrationService.TryRegistration(System.String)">
            <summary>
            Попытка регистрации (Добавление активной регистрации в случае успеха)
            </summary>
            <param name="keyValue">Активные регистируемые "значения"</param>
            <returns>Одновременно регистируется пользователь - теущая попытка не первая</returns>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IRegistrationService.IsAccountOccupiedByAnotherUser(System.String)">
            <summary>
            Проверка на занятость аккаунта другим пользователем
            </summary>
            <param name="login">телефон/логин/email</param>
            <returns>Занят ли аккаунт другим пользователем</returns>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IRegistrationService.TryRegistrationUser(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Попытка зарегистрировать пользователя
            </summary>
            <param name="userDto">Информация о пользователе</param>
            <returns>Успешна ли попытка регистрации</returns>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IRegistrationService.RigistrationByLoginAsync(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Регистрация через логин и пароль
            </summary>
            <param name="userDto">Информация о пользователе</param>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IRegistrationService.RigistrationByPhoneAsync(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Регистрация через телефон (https://smsc.ru/)
            </summary>
            <param name="userDto">Информация о пользователе</param>
        </member>
        <member name="M:YourWheel.Host.Services.Registration.IRegistrationService.RigistrationByEmailAsync(YourWheel.Domain.Dto.UserDto)">
            <summary>
            Регистрация через почту
            </summary>
            <param name="userDto">Информация о пользователе</param>
        </member>
    </members>
</doc>
